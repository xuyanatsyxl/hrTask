<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.infotechdept.hr.task.dao.AdcShiftExceptionMapper" >
  <resultMap id="BaseResultMap" type="org.infotechdept.hr.task.model.AdcShiftException" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="EXCEPTION_DATE" property="exceptionDate" jdbcType="DATE" />
    <result column="DEPTID" property="deptid" jdbcType="VARCHAR" />
    <result column="EMPID" property="empid" jdbcType="BIGINT" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="SCH_ID" property="schId" jdbcType="BIGINT" />
    <result column="EXCEPTION_FIELD" property="exceptionField" jdbcType="VARCHAR" />
    <result column="CHECK_TIME" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="ACTUAL_CHECK_TIME" property="actualCheckTime" jdbcType="TIMESTAMP" />
    <result column="PROC_STATE" property="procState" jdbcType="VARCHAR" />
    <result column="ADC_ID" property="adcId" jdbcType="VARCHAR" />
    <result column="PROC_MEMO" property="procMemo" jdbcType="VARCHAR" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="requestid" property="requestid" jdbcType="INTEGER" />
    <result column="FTriggerFlag" property="ftriggerflag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, EXCEPTION_DATE, DEPTID, EMPID, CODE, SCH_ID, EXCEPTION_FIELD, CHECK_TIME, ACTUAL_CHECK_TIME, 
    PROC_STATE, ADC_ID, PROC_MEMO, OPERATOR, OPERATE_TIME, requestid, FTriggerFlag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.infotechdept.hr.task.model.AdcShiftExceptionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adc_shift_exception
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from adc_shift_exception
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from adc_shift_exception
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.infotechdept.hr.task.model.AdcShiftExceptionExample" >
    delete from adc_shift_exception
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.infotechdept.hr.task.model.AdcShiftException" >
    insert into adc_shift_exception (ID, EXCEPTION_DATE, DEPTID, 
      EMPID, CODE, SCH_ID, EXCEPTION_FIELD, 
      CHECK_TIME, ACTUAL_CHECK_TIME, PROC_STATE, 
      ADC_ID, PROC_MEMO, OPERATOR, 
      OPERATE_TIME, requestid, FTriggerFlag
      )
    values (#{id,jdbcType=BIGINT}, #{exceptionDate,jdbcType=DATE}, #{deptid,jdbcType=VARCHAR}, 
      #{empid,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{schId,jdbcType=BIGINT}, #{exceptionField,jdbcType=VARCHAR}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{actualCheckTime,jdbcType=TIMESTAMP}, #{procState,jdbcType=VARCHAR}, 
      #{adcId,jdbcType=VARCHAR}, #{procMemo,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{requestid,jdbcType=INTEGER}, #{ftriggerflag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.infotechdept.hr.task.model.AdcShiftException" >
    insert into adc_shift_exception
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="exceptionDate != null" >
        EXCEPTION_DATE,
      </if>
      <if test="deptid != null" >
        DEPTID,
      </if>
      <if test="empid != null" >
        EMPID,
      </if>
      <if test="code != null" >
        CODE,
      </if>
      <if test="schId != null" >
        SCH_ID,
      </if>
      <if test="exceptionField != null" >
        EXCEPTION_FIELD,
      </if>
      <if test="checkTime != null" >
        CHECK_TIME,
      </if>
      <if test="actualCheckTime != null" >
        ACTUAL_CHECK_TIME,
      </if>
      <if test="procState != null" >
        PROC_STATE,
      </if>
      <if test="adcId != null" >
        ADC_ID,
      </if>
      <if test="procMemo != null" >
        PROC_MEMO,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME,
      </if>
      <if test="requestid != null" >
        requestid,
      </if>
      <if test="ftriggerflag != null" >
        FTriggerFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="exceptionDate != null" >
        #{exceptionDate,jdbcType=DATE},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=VARCHAR},
      </if>
      <if test="empid != null" >
        #{empid,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="schId != null" >
        #{schId,jdbcType=BIGINT},
      </if>
      <if test="exceptionField != null" >
        #{exceptionField,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualCheckTime != null" >
        #{actualCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procState != null" >
        #{procState,jdbcType=VARCHAR},
      </if>
      <if test="adcId != null" >
        #{adcId,jdbcType=VARCHAR},
      </if>
      <if test="procMemo != null" >
        #{procMemo,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestid != null" >
        #{requestid,jdbcType=INTEGER},
      </if>
      <if test="ftriggerflag != null" >
        #{ftriggerflag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.infotechdept.hr.task.model.AdcShiftExceptionExample" resultType="java.lang.Integer" >
    select count(*) from adc_shift_exception
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update adc_shift_exception
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.exceptionDate != null" >
        EXCEPTION_DATE = #{record.exceptionDate,jdbcType=DATE},
      </if>
      <if test="record.deptid != null" >
        DEPTID = #{record.deptid,jdbcType=VARCHAR},
      </if>
      <if test="record.empid != null" >
        EMPID = #{record.empid,jdbcType=BIGINT},
      </if>
      <if test="record.code != null" >
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.schId != null" >
        SCH_ID = #{record.schId,jdbcType=BIGINT},
      </if>
      <if test="record.exceptionField != null" >
        EXCEPTION_FIELD = #{record.exceptionField,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null" >
        CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualCheckTime != null" >
        ACTUAL_CHECK_TIME = #{record.actualCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.procState != null" >
        PROC_STATE = #{record.procState,jdbcType=VARCHAR},
      </if>
      <if test="record.adcId != null" >
        ADC_ID = #{record.adcId,jdbcType=VARCHAR},
      </if>
      <if test="record.procMemo != null" >
        PROC_MEMO = #{record.procMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.operator != null" >
        OPERATOR = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null" >
        OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestid != null" >
        requestid = #{record.requestid,jdbcType=INTEGER},
      </if>
      <if test="record.ftriggerflag != null" >
        FTriggerFlag = #{record.ftriggerflag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update adc_shift_exception
    set ID = #{record.id,jdbcType=BIGINT},
      EXCEPTION_DATE = #{record.exceptionDate,jdbcType=DATE},
      DEPTID = #{record.deptid,jdbcType=VARCHAR},
      EMPID = #{record.empid,jdbcType=BIGINT},
      CODE = #{record.code,jdbcType=VARCHAR},
      SCH_ID = #{record.schId,jdbcType=BIGINT},
      EXCEPTION_FIELD = #{record.exceptionField,jdbcType=VARCHAR},
      CHECK_TIME = #{record.checkTime,jdbcType=TIMESTAMP},
      ACTUAL_CHECK_TIME = #{record.actualCheckTime,jdbcType=TIMESTAMP},
      PROC_STATE = #{record.procState,jdbcType=VARCHAR},
      ADC_ID = #{record.adcId,jdbcType=VARCHAR},
      PROC_MEMO = #{record.procMemo,jdbcType=VARCHAR},
      OPERATOR = #{record.operator,jdbcType=VARCHAR},
      OPERATE_TIME = #{record.operateTime,jdbcType=TIMESTAMP},
      requestid = #{record.requestid,jdbcType=INTEGER},
      FTriggerFlag = #{record.ftriggerflag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.infotechdept.hr.task.model.AdcShiftException" >
    update adc_shift_exception
    <set >
      <if test="exceptionDate != null" >
        EXCEPTION_DATE = #{exceptionDate,jdbcType=DATE},
      </if>
      <if test="deptid != null" >
        DEPTID = #{deptid,jdbcType=VARCHAR},
      </if>
      <if test="empid != null" >
        EMPID = #{empid,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="schId != null" >
        SCH_ID = #{schId,jdbcType=BIGINT},
      </if>
      <if test="exceptionField != null" >
        EXCEPTION_FIELD = #{exceptionField,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actualCheckTime != null" >
        ACTUAL_CHECK_TIME = #{actualCheckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="procState != null" >
        PROC_STATE = #{procState,jdbcType=VARCHAR},
      </if>
      <if test="adcId != null" >
        ADC_ID = #{adcId,jdbcType=VARCHAR},
      </if>
      <if test="procMemo != null" >
        PROC_MEMO = #{procMemo,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestid != null" >
        requestid = #{requestid,jdbcType=INTEGER},
      </if>
      <if test="ftriggerflag != null" >
        FTriggerFlag = #{ftriggerflag,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.infotechdept.hr.task.model.AdcShiftException" >
    update adc_shift_exception
    set EXCEPTION_DATE = #{exceptionDate,jdbcType=DATE},
      DEPTID = #{deptid,jdbcType=VARCHAR},
      EMPID = #{empid,jdbcType=BIGINT},
      CODE = #{code,jdbcType=VARCHAR},
      SCH_ID = #{schId,jdbcType=BIGINT},
      EXCEPTION_FIELD = #{exceptionField,jdbcType=VARCHAR},
      CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      ACTUAL_CHECK_TIME = #{actualCheckTime,jdbcType=TIMESTAMP},
      PROC_STATE = #{procState,jdbcType=VARCHAR},
      ADC_ID = #{adcId,jdbcType=VARCHAR},
      PROC_MEMO = #{procMemo,jdbcType=VARCHAR},
      OPERATOR = #{operator,jdbcType=VARCHAR},
      OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      requestid = #{requestid,jdbcType=INTEGER},
      FTriggerFlag = #{ftriggerflag,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>