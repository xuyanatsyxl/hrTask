<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.infotechdept.hr.task.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="org.infotechdept.hr.task.model.Employee" >
    <id column="EMPID" property="empid" jdbcType="INTEGER" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="SEX" property="sex" jdbcType="VARCHAR" />
    <result column="CARD" property="card" jdbcType="VARCHAR" />
    <result column="BIRTHDAY" property="birthday" jdbcType="BIGINT" />
    <result column="IDCARD" property="idcard" jdbcType="VARCHAR" />
    <result column="HIREDATE" property="hiredate" jdbcType="BIGINT" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="DQZT" property="dqzt" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    EMPID, CODE, NAME, SEX, CARD, BIRTHDAY, IDCARD, HIREDATE, REMARK, DQZT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.infotechdept.hr.task.model.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where EMPID = #{empid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where EMPID = #{empid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.infotechdept.hr.task.model.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.infotechdept.hr.task.model.Employee" >
    insert into employee (EMPID, CODE, NAME, 
      SEX, CARD, BIRTHDAY, 
      IDCARD, HIREDATE, REMARK, 
      DQZT)
    values (#{empid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{card,jdbcType=VARCHAR}, #{birthday,jdbcType=BIGINT}, 
      #{idcard,jdbcType=VARCHAR}, #{hiredate,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{dqzt,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.infotechdept.hr.task.model.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="empid != null" >
        EMPID,
      </if>
      <if test="code != null" >
        CODE,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="sex != null" >
        SEX,
      </if>
      <if test="card != null" >
        CARD,
      </if>
      <if test="birthday != null" >
        BIRTHDAY,
      </if>
      <if test="idcard != null" >
        IDCARD,
      </if>
      <if test="hiredate != null" >
        HIREDATE,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="dqzt != null" >
        DQZT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="empid != null" >
        #{empid,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="card != null" >
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=BIGINT},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null" >
        #{hiredate,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dqzt != null" >
        #{dqzt,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.infotechdept.hr.task.model.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.empid != null" >
        EMPID = #{record.empid,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        SEX = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.card != null" >
        CARD = #{record.card,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        BIRTHDAY = #{record.birthday,jdbcType=BIGINT},
      </if>
      <if test="record.idcard != null" >
        IDCARD = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredate != null" >
        HIREDATE = #{record.hiredate,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.dqzt != null" >
        DQZT = #{record.dqzt,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set EMPID = #{record.empid,jdbcType=INTEGER},
      CODE = #{record.code,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=VARCHAR},
      CARD = #{record.card,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=BIGINT},
      IDCARD = #{record.idcard,jdbcType=VARCHAR},
      HIREDATE = #{record.hiredate,jdbcType=BIGINT},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      DQZT = #{record.dqzt,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.infotechdept.hr.task.model.Employee" >
    update employee
    <set >
      <if test="code != null" >
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        SEX = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="card != null" >
        CARD = #{card,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        BIRTHDAY = #{birthday,jdbcType=BIGINT},
      </if>
      <if test="idcard != null" >
        IDCARD = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="hiredate != null" >
        HIREDATE = #{hiredate,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dqzt != null" >
        DQZT = #{dqzt,jdbcType=VARCHAR},
      </if>
    </set>
    where EMPID = #{empid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.infotechdept.hr.task.model.Employee" >
    update employee
    set CODE = #{code,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=VARCHAR},
      CARD = #{card,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=BIGINT},
      IDCARD = #{idcard,jdbcType=VARCHAR},
      HIREDATE = #{hiredate,jdbcType=BIGINT},
      REMARK = #{remark,jdbcType=VARCHAR},
      DQZT = #{dqzt,jdbcType=VARCHAR}
    where EMPID = #{empid,jdbcType=INTEGER}
  </update>
</mapper>