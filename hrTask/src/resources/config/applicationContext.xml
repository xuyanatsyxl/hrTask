<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- Spring定时器注解开关 -->
	<task:annotation-driven />
	
	<!-- 此处对于定时时间的配置会被注解中的时间配置覆盖，因此，以注解配置为准 -->
	<task:scheduled-tasks scheduler="myScheduler">
		<!-- 生成考勤异常数据，每天凌晨3点定时运行 -->
		<task:scheduled ref="engineer" method="makeKqReport" cron="0 0 3 * * ?" />
		<!-- 生成下个日的排班数据，在每天晚21点 cron = "0 0 21 0 * ?"-->
		<task:scheduled ref="engineer" method="makeNextDayScheduling" cron="0 0 21 * * ?" />
		<!-- 应用oa请求记录，7点至22点之间，每隔10分钟执行一次 cron = "0 0 0/1 * * ?" -->
		<task:scheduled ref="engineer" method="procOaData" cron="0 0/10 7-22 * * ?" />
		
		<!-- 查询每天HR系统产生的异动记录，并应用的考勤系统中，每天晚上10点执行 -->
		<task:scheduled ref="engineer" method="scanHrForStaffer" cron="0 0 22 * * ?" />
		<!-- 每天早上八点将前一天生成的异常数据推送到OA端 -->
		<task:scheduled ref="engineer" method="pushExceptionToOA" cron="0 0 8 * * ?" />
	</task:scheduled-tasks>
	<task:scheduler id="myScheduler" pool-size="40" />

	<!-- Spring服务组件扫描 -->
	<context:component-scan base-package="org.infotechdept.hr.task.service" />
	<context:component-scan base-package="org.infotechdept.hr.task.scheduler" />
	<context:component-scan base-package="org.infotechdept.hr.task.hr.service.impl" />
	
	<!-- 加载属性配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>

	<!-- Apache Commons DBCP 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="30" />
		<property name="maxIdle" value="15" />
		<property name="minIdle" value="5" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="maxWait" value="10000" />
		<property name="logAbandoned" value="false" />
	</bean>

	<!-- 单一数据源事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- SqlSessionFactory配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml" />
	</bean>

	<!-- Mybatis的Mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.infotechdept.hr.task.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- 打开事务注解驱动开关 -->
	<tx:annotation-driven />

	<import resource="spring-hr.xml"/>
</beans>